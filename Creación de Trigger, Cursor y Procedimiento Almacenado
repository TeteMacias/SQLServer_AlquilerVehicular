/*CREAMOS TRIGGER Q PERMITA GUARDAR HISTORIAL DE REGISTRO DE RESERVA*/
--CREAMOS TABLA HISTORIAL
create table HISTORIALRESERVA(
    Fecha date,
	CodiReserva integer NOT NULL,
	Descripcion varchar (100),
	usuario varchar (30)
	);
	GO

/*CREAMOS TRIGGER Q PERMITA GUARDAR HISTORIAL DE REGISTRO DE RESERVA*/
create trigger TR_ReservaInsertado
on RESERVA for insert
AS
set nocount on
declare @CodiReserva integer
select @CodiReserva = CodiReserva from inserted
insert into HISTORIALRESERVA values (GETDATE(), @CodiReserva, 'Registro Insertado en tabla Reserva', SYSTEM_USER)
go

/*GUARDAMOS UNA RESERVA Y CONSULTAMOS EN AMBAS TABLAS*/
set dateformat ymd;
insert into RESERVA values
(1006, 02, 304, 'B', '2021/03/09 11:00.56', '2021/03/09 16:40.20', 'EFECTIVO',  'CANCELADO')
go

select * from HISTORIALRESERVA;
select * from RESERVA;

/*CREAMOS CURSOR QUE ME PERMITA ACTUALIZAR DATOS EN TABLA REGISTROENCARGADODEPART Y QUE EL LOS DATOS QUE ESTAN PENDIENTES, LOS PASE A CANCELADO*/
--Declaramos el cursor
Declare actualizandoDatos CURSOR
/*HACEMOS LA CONSULTA */
FOR select CodiReserva, estadoPago from RESERVA
--Abrimos el cursor
OPEN actualizandoDatos
/*Declaramos variables de las columnas*/
declare @CodiReserva int, @estadoPago varchar (10)
--Navegamos 
Fetch next from actualizandoDatos into @CodiReserva, @estadoPago
--recorremos un ciclo mientras el fetch estatus sea =0
while (@@FETCH_STATUS = 0)
BEGIN
	if @estadoPago = 'PENDIENTE'
	begin
		UPDATE RESERVA set estadoPago = 'CANCELADO'
		where CodiReserva=@CodiReserva
		print concat('Se actualiza los datos de tipo de pago del c√≥digo de reserva', @CodiReserva)
	end
    Fetch next from actualizandoDatos into @CodiReserva, @estadoPago
END
print 'Fin del Cursor Actualizando Datos'
--Cerramos el cursor
CLOSE actualizandoDatos
--Liberamos de la memoria
DEALLOCATE actualizandoDatos
GO
select * from RESERVA;
go

/*CREAMOS PROCEDIMIENTO ALMACENADO QUE ME PERMITA VER QUE CLIENTE TIENE UNA CANTIDAD DE RESERVA EN LA BASE DE DATOS*/
create proc totalVehiculoRentado
@cliente int,
@totalReserva int output 
AS
BEGIN
select @totalReserva=count(CodiReserva)
from RESERVA WHERE IDClientepk=@cliente
end

declare @total int
exec dbo.totalVehiculoRentado 2, @totalReserva=@total output
print 'El total de la reserva por el cliente es: '+ltrim (@total)
